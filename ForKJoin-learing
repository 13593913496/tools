Fork/join使用事项

使用一个线程每隔5s输出线程数量
1.方法结束后ForkJoinPool的线程什么时候释放
	关掉线程池：需要调用shutdown关掉，shutdown会将任务执行完成才一个关掉。	
2.ForkJoinPool线程池大小
	任务过多时会无线增加，但是运行线程数量是固定的	
3.ForkJoinPool队列里面线程的个数
	任务过多时队列也会无线增加
4.线程池占用多大内存
	10个大小的线程池占用多大内存？
	20个大小的线程池占用多大内存？
5.如何使用命令观察内存
	wmic process get name,executablepath,processid：查看进程名、路径、pid

	jstat -gcutil 2240 250 7
	
	
6.如何将内存信息导出为dump日志
	wmic process get name,executablepath,processid：查看进程名、路径、pid
	jstack 12036 查看堆栈
	D:\Java\jdk1.7.0_79\bin>jstack 8440 > dump.dmp 导出堆栈
	dump日志如何找到forkjoin线程?
	jstack 堆栈信息 跟 接口返回的线程信息对的上吗？--只能根据名字去对，且栈的信息跟接口匹配的上 ok
	
	
7.线程注销是同步还是异步方法
	异步方法
8.创建线程池的开销多少
    0-15ms	
9.Fork/Join使用的API
	https://docs.oracle.com/javase/7/docs/api/
10.线程异常处理
	a.异常信息？ ok 
	b.异常之后，任务是否结束？ 异常接口可以关闭线程池 ok
	
11.提供主动关闭线程池的接口。
	a.先关掉开关，取消使用线程池定制编码
	b.调用接口查询有没有Fork/Join线程，有则关掉 -- b操作要等a切换一段时间后使用
	调用接口后不关掉ThreadPool,然后再通过调用接口关闭? 。。。。静态线程对象才可以关闭。	
	
12.使用多线程后还剩400ms的延迟去那里了--相较最大耗时的接口
	a.3个线程时，多出400ms延迟,稳定下来多出60ms
	b.2个线程时，也是多出400ms的延迟,稳定下来时多出40ms
13.测试优先级是否有效--优先compute执行最慢的接口,因为join会有性能消耗
   优先级有效--提升200ms  
14.底层、线程池数量为什么用完后就变成了1个？		
   线程数组，任务执行完成后，数组为空
